详细说明针对红色底纹PDF的处理方案。

  红色底纹是CMS-1500表单的常见问题，特别是：
  1. 红色VOID水印
  2. 红色网格线
  3. 粉红色安全背景
  4. 红色防伪底纹

  这些都会严重影响OCR识别率。

  我的解决方案包括：
  1. 图像预处理管道
  2. 颜色空间转换
  3. 红色通道抑制
  4. 对比度增强
  5. 自适应阈值

  需要用户决策的点：
  1. 是否需要保留彩色信息
  2. 处理强度的平衡
  3. 性能vs质量的权衡
  4. 是否需要人工审核

⏺ 红色底纹 PDF 处理方案思路

  问题分析

  红色底纹在 CMS-1500 表单中很常见，主要包括：
  - 🔴 红色 "VOID" 水印
  - 🔴 红色网格线
  - 🔴 粉红色安全背景
  - 🔴 红色防伪底纹

  这些会导致：
  - OCR 误识别率高
  - 文字边缘模糊
  - 对比度降低
  - 噪点增加

  我的实现思路

  1. 双轨处理策略

  原始 PDF → 分两路处理：
  ├── 路径 A：图像预处理（去红色）→ Textract OCR
  └── 路径 B：保留原始（用于存档）

  2. 核心技术方案

  方案一：HSV 颜色空间处理（推荐）

  # 优点：精准识别红色，保留其他颜色
  # 缺点：计算量较大

  1. RGB → HSV 转换
  2. 红色区间检测 (H: 0-10, 170-180)
  3. 创建红色掩码
  4. 替换红色为白色
  5. 转为灰度图

  方案二：通道抑制法（快速）

  # 优点：速度快
  # 缺点：可能影响其他红色元素

  1. 分离 R、G、B 通道
  2. 抑制红色通道: R' = min(R, (G+B)/2)
  3. 重组图像
  4. 转灰度

  方案三：机器学习方法（高级）

  # 优点：效果最好
  # 缺点：需要训练数据

  1. U-Net 模型分割文字/背景
  2. 保留文字层
  3. 重建干净图像

  3. 增强处理流程

  预处理后的图像 → 增强管道：
  1. CLAHE 对比度增强（针对表单框）
  2. 形态学降噪（去除孤立噪点）
  3. 锐化处理（增强文字边缘）
  4. 自适应二值化（最终清理）

  4. 集成到现有流程

  # 在 load_from_s3 之后，detect_cms1500 之前
  async def preprocess_for_ocr(state: State):
      if state.has_red_background:  # 检测是否有红色背景
          for i, page_pdf in enumerate(state.page_pdfs):
              state.page_pdfs[i] = remove_red_background(page_pdf)

  需要您决策的关键点

  1. 处理强度选择

  - 保守模式：轻度去红，保留更多原始信息
    - 适合：轻微红色底纹
    - 风险：可能残留部分红色
  - 激进模式：彻底去红，可能损失部分信息
    - 适合：严重红色干扰
    - 风险：可能误删红色印章/签名

  您的选择？ □ 保守 □ 激进 □ 自动检测

  2. 性能 vs 质量权衡

  - 选项 A：快速处理（通道抑制）
    - 处理时间：~100ms/页
    - OCR 提升：30-40%
  - 选项 B：高质量处理（HSV + 完整增强）
    - 处理时间：~500ms/页
    - OCR 提升：60-70%

  您的选择？ □ 速度优先 □ 质量优先 □ 自适应

  3. 是否保留原始文件

  - 选项 A：只保存处理后的版本（节省空间）
  - 选项 B：同时保存原始和处理版本（可追溯）
  - 选项 C：保存原始 + 处理参数（可重建）

  您的选择？ □ A □ B □ C

  4. 特殊元素处理

  红色印章/签名 可能被误删，如何处理？
  - 选项 A：预先检测并保护特定区域
  - 选项 B：后处理合并回原始红色元素
  - 选项 C：人工审核标记

  您的选择？ □ A □ B □ C

  5. 降级策略

  如果预处理后 OCR 效果反而变差：
  - 选项 A：自动回退到原始图像
  - 选项 B：尝试其他预处理参数
  - 选项 C：标记为需人工处理

  您的选择？ □ A □ B □ C

  实施建议

  # 建议的配置
  {
      "preprocessing": {
          "enable": true,
          "method": "hsv",  # hsv / channel / ml
          "intensity": "auto",  # auto / light / strong
          "preserve_red_stamps": true,
          "fallback_on_failure": true,
          "save_original": true,
          "quality_threshold": 0.7  # OCR 置信度阈值
      }
  }

  预期效果

  - ✅ OCR 准确率提升 40-70%
  - ✅ 处理时间增加 200-500ms/页
  - ✅ 特别适合扫描版红底 CMS-1500
  - ⚠️ 需要额外依赖：OpenCV、Pillow